
 piante: {
--getArchivePianta
SELECT * FROM pianta p WHERE 1=1
        ORDER BY p.nome DESC;
        
--getPianta
SELECT * FROM pianta p WHERE p.id = :id_pianta


--createPianta
insert into pianta(id, nome, nome_scientifico, fiore, colore1, colore2, prezzo, quantità, adottabile, prezzo_adozione, inizio_raccolto, fine_raccolto, stato_pianta)
values("+ id + "," + nome +"," + nome_scientifico +"," + fiore +","+ colore1 +","+ colore2 +","+ prezzo +","+ quantità +","+ adottabile +","+ prezzo_adozione +","+ inizio_raccolto +","+ fine_raccolto +","+ stato_pianta +")";


--modifyPianta

UPDATE pianta 
set nome = :nome, nome_scientifico = :nome_scientifico, fiore = :fiore, colore1 = :colore1, 
colore2 = :colore2, prezzo = :prezzo, quantità = :quantita, adottabile = :adottabile, 
prezzo_adozione = :prezzo_adozione, inizio_raccolto = :inizio_raccolto, fine_raccolto = :fine_raccolto,
stato_pianta = :stato_pianta

--deactivatePianta

UPDATE pianta p
SET stato_pianta = :active
where p.id = :id_pianta


}

 Ordine: {
 
--getArchiveOrder
SELECT * FROM ordine WHERE 1=1


--getOrder
SELECT * FROM ordine WHERE id = :id_ordine

--modifyOrderStatus

UPDATE ordine
SET stato = :stato
WHERE id = :id_ordine

  },
  
  
    Rifornimento: {
--getArchiveRifornimento

SELECT * FROM rifornimento WHERE 1=1

--getRifornimento

SELECT * FROM rifornimento WHERE id = :id_rifornimento

--createRifornimento
INSERT INTO rifornimento (id_pianta, id_fornitore, quantità, data_ordine, data_arrivo, id_user)
VALUES (:id_pianta, :id_fornitore, :quantita, :data_ordine, :data_arrivo, :id_user)



--modifyFornitoreStatus
update ordine  SET stato = :stato  WHERE o.id = :id_rifornimento


  },
  
    Adozione: {
 --getArchiveAdozione
 
 select a.id, a.id_pianta,a.id_user,a.quantity,a.punto_ritiro, u.id, u.username, u.email, o.id, o.id_punto_ritiro 
 from punto_ritiro pr 
 inner join ordine o on pr.id = o.id_punto_ritiro 
 inner join pianta_ordine po on o.id = po.id_ordine 
 inner join pianta p on po.id_pianta = p.id 
 inner join adozioni a on p.id = a.id_pianta 
 inner join utente u on a.id_user = u.id 
 where 1=1
    
--getAdozione

SELECT *
from adozioni a 
where a.id = :id_adozione

  },
  
   Punto_ritiro: {
--getArchivePuntoRitiro
select pr.id, pr.nome, pr.indirizzo, u.id, u.username, u.email, o.id, o.data_acquisto, o.data_ritiro, o.stato 
from utente u
inner join adozioni a on u.id = a.id_user 
inner join pianta p on a.id_pianta = p.id 
inner join pianta_ordine po on p.id = po.id_pianta 
inner join ordine o on po.id_ordine = o.id 
inner join punto_ritiro pr on o.id_punto_ritiro = pr.id 
where 1=1


--getPuntoRitiro

SELECT *
FROM punto_ritiro pr 
WHERE pr.id = :id_punto_ritiro

  },
  
  Fornitore: {
--getArchiveFornitore

SELECT f.id, f.nome, f.email, f.telefono, r.id, r.quantità, r.data_ordine, r.data_arrivo, r.id_pianta, r.id_fornitore, r.id_user  
from fornitore f
inner join rifornimento r on f.id = r.id_fornitore
inner join pianta p on r.id_pianta = p.id 
inner join pianta_ordine po on p.id = po.id_pianta 
where 1=1

--getFornitore

SELECT f.id, f.nome, f.email, f.telefono 
from fornitore f 
where f.id = :id_fornitore

--modifyFornitore

UPDATE fornitore 
set nome = :nome, email = :email, telefono = :telefono, stato = :stato
where id = :id_fornitore

--createFornitore

INSERT into fornitore(id, nome, email, telefono)
values( :id, :nome, :email, :telefono)

--modifyActiveFornitore

UPDATE fornitore f
SET stato = :active
where f.id = :id_fornitore

  },
  
 Utente: {
--login

SELECT *
from utente u
where u.email =  :email  and `password` =  :password_user

--deleteUtente

DELETE FROM Utente 
WHERE  id = :id_utente

--getUtente

SELECT *
FROM utente u
WHERE u.id = :id_utente

--resetPassword

UPDATE utente
SET `password` = :password_utente
WHERE id = :id_utente

--registra

INSERT into ordine(id, username, email, `password`, livello_permessi)
values( :id, :username, :email, :`password`, :livello_permessi)

  }
  
  
  
